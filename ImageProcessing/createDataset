#https://www.datacamp.com/community/tutorials/tensorflow-tutorial

#ROOT_PATH is where i make my directory with training and test data

#this purpose is for load data

import os
import skimage
from skimage import data
import PIL
from PIL import Image

import os
import skimage
from skimage import data
import PIL
from PIL import Image
import numpy as np
import matplotlib.pyplot as plt
import random
from random import randint

def load_data(data_directory):
    directories = [d for d in os.listdir(data_directory) 
                  if os.path.isdir(os.path.join(data_directory,d))]
    labels=[]
    images=[]
    for d in directories:
        label_directory = os.path.join(data_directory,d)
        file_names = [os.path.join(label_directory,f)
                     for f in os.listdir(label_directory)
                     if f.endswith('.ppm')]
        for f in file_names:
            images.append(skimage.data.imread(f))
            labels.append(int(d))
    return images, labels


ROOT_PATH = '/host/belgiumTS/'

print(ROOT_PATH)

train_data_directory = os.path.join(ROOT_PATH,'TrafficSigns/Training')

test_data_directory = os.path.join(ROOT_PATH,'TrafficSigns/Testing')

images,labels = load_data(train_data_directory)


# In[47]:


type(images[0])


# In[49]:


print(images[0].shape)


# In[51]:


im=Image.fromarray(images[0])


# In[52]:


im.size


# In[54]:


print(len(set(labels)))


# In[56]:


plt.hist(labels,62)


# In[86]:


traffic_signs = [300,2250,3650,4000]
#traffic_samples = random.sample(images,5)

traffic_samples = []
for i in range(0,5,1):#choose how many samples you want 
    traffic_samples.append(randint(0,len(images)))
print(traffic_samples)


# In[92]:


for i in range(len(traffic_samples)):
    plt.subplot(1,len(traffic_samples),i+1)
    plt.axis('off')
    plt.imshow(images[traffic_samples[i]])
    plt.subplots_adjust(wspace=0.5)
    plt.show()
    
    print('shape:{0},min:{1},max:{2}'.format(images[traffic_samples[i]].shape,#shape
                                            images[traffic_samples[i]].min(),#min pixel
                                            images[traffic_samples[i]].max()))#max pixel


# In[94]:


unique_labels = set(labels)#get the unique labels

plt.figure(figsize=(15,15))

i=1


for label in unique_labels:
    #you pick the first image for each label
    image = images[labels.index(label)]#label set index, only first image
    #define 64 subplots
    plt.subplot(8,8,i)
    #dont include axes
    plt.axis('off')
    #add a title to each subplot
    plt.title('Label{0} ({1})'.format(label,labels.count(label)))#order and label index
    #add 1 to the counter
    i+=1
    #add you plot this first image
    plt.imshow(image)
plt.show()
    


# In[106]:


for label in unique_labels:
    print((labels.count(label)))
from skimage import transform

images28 = [transform.resize(image,(28,28)) for image in images]#resize image

print(images28[0].shape)

from skimage.color import rgb2gray

images28 = np.array(images28)


images28 = rgb2gray(images28)


images28.shape

import matplotlib.pyplot as plt

for i in range(len(traffic_samples)):
    plt.subplot(1,len(traffic_samples),i+1)
    plt.axis('off')
    plt.imshow(images28[traffic_samples[i]],cmap='gray')
    plt.subplots_adjust(wspace=0.5)
plt.show()
